<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
     <parent>
        <artifactId>postupload-parent</artifactId>
        <groupId>au.com.postnewspapers</groupId>
        <version>1.0-SNAPSHOT</version>
      </parent>
    <artifactId>postupload-webapp</artifactId>
    <packaging>war</packaging>
    <name>postupload Java EE 6 Webapp</name>
    <url>http://github.com/ringerc/postupload</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Unless overridden by a profile, we expect jersey and jackson to be
             provided by the container and at least the specified version. -->
        <jersey-jackson-scope>provided</jersey-jackson-scope>
        <jersey-version>1.5</jersey-version>
        <jackson-version>1.5.5</jackson-version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version>
        </dependency>
        <!-- Unless overridden by a profile, the application server is expected
             to provide Jersey for us -->
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
            <version>${jersey-version}</version>
            <scope>${jersey-jackson-scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey-version}</version>
            <scope>${jersey-jackson-scope}</scope>
        </dependency>
        <!-- Jersey-json depends on jackson, so if Jersey is provided by the
        container then Jackson should be too -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson-version}</version>
            <scope>${jersey-jackson-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
            <version>${jackson-version}</version>
            <scope>${jersey-jackson-scope}</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
        </plugins>
        <finalName>postupload</finalName>
    </build>
    <profiles>
        
        <!-- The glassfish 3.1 profile is the only supported profile at present -->
        <profile>
            <id>glassfish3</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>appserver</name>
                    <value>glassfish3</value>
                </property>
            </activation>
            <build>
                <finalName>postupload-glassfish3</finalName>
            </build>
        </profile>
        
        <!-- Embedded glassfish profile
             See doc/README-GLASSFISH-EMBEDDED.txt -->
        <profile>
            <id>glassfish3embedded</id>
            <activation>
                <property>
                    <name>appserver</name>
                    <value>glassfish3embedded</value>
                </property>
            </activation>
            <pluginRepositories>
                <!-- only required for embedded glassfish -->
                <pluginRepository>
                    <id>Glassfish</id>
                    <url>http://download.java.net/maven/glassfish/</url>
                </pluginRepository>
            </pluginRepositories>
            <repositories>
                <!-- only required for embedded glassfish -->
                <repository>
                    <id>Glassfish</id>
                    <url>http://download.java.net/maven/glassfish/</url>
                </repository>
            </repositories>
            <build>
                <finalName>postupload-glassfish3embedded</finalName>
                <plugins>
                  <plugin>
                    <groupId>org.glassfish</groupId>
                    <artifactId>maven-embedded-glassfish-plugin</artifactId>
                    <version>3.1</version>
                    <!-- see http://embedded-glassfish.java.net/nonav/plugindocs/3.1/run-mojo.html -->
                    <configuration>
                        <goalPrefix>embedded-glassfish</goalPrefix>
                        <app>target/postupload-glassfish3embedded.war</app>
                        <port>8380</port>
                        <contextRoot>postupload</contextRoot>
                    </configuration>
                  </plugin>
                 </plugins>
            </build>
        </profile>
        
        <!-- 
        At present the JBoss AS 6 configuration is not working. See doc/README-JBOSS.txt
        -->
        <profile>
            <id>jbossas6</id>
            <activation>
                <property>
                    <name>appserver</name>
                    <value>jbossas6</value>
                </property>
            </activation>
            <properties>
                <!-- Jersey 1.5 doesn't deploy to JBoss 6, so this won't work. See doc/README-JBOSS.txt -->
                <jersey-jackson-scope>compile</jersey-jackson-scope>
            </properties>
            <build>
                <finalName>postupload-jbossas6</finalName>
            </build>
        </profile>
        
    </profiles>
</project>

